openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://api.server.test/v1

components:
  schemas:
    CreateTicketDto:
      properties:
        flightId:
          example: "VN123"
          minLength: 1
          type: string
        passengerId:
          minLength: 1
          example: "ceasdsa-dcxzcx21312"
          type: string
        price:
          example: 1000000
          type: string
          minLength: 1
        sellerId:
          example: "ceasdsa-kwtsadas"
          minLength: 1
          type: string
        status:
          example: "Booked"
          minLength: 1
          type: string
          enum:
            - Booked
            - Selled
            - Cancelled
        sellAt:
          example: "2021-09-01T00:00:00.000Z"
          type: string
      type: object
      required:
        - flightID
        - passengerId
        - price
        - sellerId
        - status

    UpdateTicketDto:
      properties:
        flightId:
          type: string
        passengerId:
          type: string
        price:
          type: number
        sellerId:
          type: string
        status:
          example: "Selled"
          enum:
            - Booked
            - Selled
            - Cancelled
          type: string
        sellAt:
          type: string
      type: object

    GetTicketById:
      properties:
        flightId:
          example: "VN123"
          minLength: 1
          type: string
        passengerId:
          minLength: 1
          example: "ceasdsa-dcxzcx21312"
          type: string
        price:
          example: 1000000
          type: string
          minLength: 1
        sellerId:
          example: "ceasdsa-kwtsadas"
          minLength: 1
          type: string
        status:
          example: "Booked"
          minLength: 1
          type: string
          enum:
            - Booked
            - Selled
            - Cancelled
        sellAt:
          example: "2021-09-01T00:00:00.000Z"
          type: string
      type: object
      required:
        - flightID
        - passengerId
        - price
        - sellerId
        - status



paths:
  /test:
    get:
      responses:
        '200':
          description: OK
    put:
      description: ''
      parameters: 
        - in: query
          name: userId
          schema:
            type: integer
          description: Numeric ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  website:
                    type: string
                  company:
                    type: object
                    properties:
                      name:
                        type: string
                      catchPhrase:
                        type: string
                      bs:
                        type: string
                        

